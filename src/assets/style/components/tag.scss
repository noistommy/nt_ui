$baseTagColor: var(--suf);
$tagDotSize: 16px;
$tagLineWidth: 80px;
$tagLineHeight: 8px;

.ga-tag {
  display: inline-block;
  border-style: solid;
  border-radius: 0.6em;
  margin: 3px;
  text-align: center;
  &.line {
    border-width: ($tagLineHeight * 0.5);
    width: $tagLineWidth;
    min-width: 30px;
    border-color: $baseTagColor;
  }
  &.dot {
    border-radius: ($tagDotSize * 0.5);
    border-width: ($tagDotSize * 0.5);
    width:0;
    height:0;
    border-color: $baseTagColor;
  }
  &.label {
    vertical-align: baseline;
    font-size: 0.8rem;
    font-weight: 400;
    line-height: 1em;
    border-radius: 2em;
    display: inline-block;
    margin: 0 0.14285714em;
    background-color: $baseTagColor;
    background-image: none;
    padding: 0.5833em 0.833em;
    text-transform: none;
    border: 0 solid transparent;
    transition: background .1s ease;
    &.hover, &.focus,
    &:hover, &:focus {
      background-color: var(--dark-suf);
    }
    i.icon.left {
      margin-right: 5px;
    }
    i.icon.right {
      margin-left: 5px;
    }
    i.link {
      cursor: pointer;
    }
    &.rect {
      border-radius: 4px;
    }
  }
}

@keyframes bounce {
  25% {transform: scale(1.1)}
  75% {transform: scale(0.9)}
}
.ga-tags {
  width: 100%;
  display: inline-flex;
  flex-wrap: wrap;
  overflow-x: auto;
  .ga-tag {
    min-width: 50px;
  }
  &.tagMap {
    flex-wrap: wrap;
  }
  &.one-of-a-kind {
    flex-wrap: wrap;
    visibility: hidden;
    &:hover > * {
      opacity: .4;
      transform: scale(.9);
    }
    > * {
      visibility: visible;
      transition: opacity 150ms linear 100ms, transform 150ms ease-in-out 100ms;
      &:hover {
        opacity: 1;
        transform: scale(1);
        transition-delay: 0ms, 0ms;
      }
    }
  }
}
.bounce > div, .bounce > span{
  transform: perspective(1px) translateZ(0);
  &:hover {
    animation-name: bounce;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
    animation-timing-function: linear;
  }

}

@each $color, $values in join($brandColors, $stateColors){
  $bgColor: #{nth($values, 1)};
  $hoverColor: #{nth($values, 2)};
  $textColor: #{nth($values, 3)};
  .ga-tag {
    &.#{$color}:not(.label) {
      border-color: $bgColor;
      &.hover, &.focus,
      &:hover, &:focus {
        border-color: $hoverColor;
      }
    }
    &.#{$color}.label {
      background-color: $bgColor;
      color: $white;
      &.hover, &.focus,
      &:hover, &:focus {
        background-color: $hoverColor;
      }
    }
  }
}

@each $color, $value in $colors {
  $hoverColor: darken($value, 10);
  .ga-tag {
    &.#{$color}:not(.label) {
      border-color: $value;
      &.hover, &.focus,
      &:hover, &:focus {
        border-color: $hoverColor;
      }
    }
    &.#{$color}.label {
      background-color: $value;
      color: $white;
      &.hover, &.focus,
      &:hover, &:focus {
        background-color: $hoverColor;
      }
    }
  }
}

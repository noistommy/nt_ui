$baseButtonColor:var(--txt);
$baseButtonBg: var(--suf);
$hoverButtonBg: var(--hover-suf);

$badgeFontSize: relativePx(11);
$badgeFontWeight: 600;
$badgeSize: relativePx(16);
$badgeMarkSize: 8px;
$baseBadgeColor: $baseButtonBg;
$badgeBorderRadius: $badgeSize;
$badgeVerticalPadding: 4px;
$badgeHorizontalPadding: 6px;
$badgePadding: $badgeVerticalPadding $badgeHorizontalPadding;
$badgeShadow: -2px 2px 0px 0px rgba(0, 0, 0, 0.2);
$badgeOffset: ($badgeSize * 0.5);
$badgeOffsetLeft: calc(100% - $badgeOffset);

.ga-badge {
  cursor: default;
  vertical-align: baseline;
  display: inline-block;
  font-size: $badgeFontSize;
  font-weight: $badgeFontWeight;
  text-align: center;
  min-width: $badgeSize;
  min-height: $badgeSize;
  line-height: 1em;
  padding: $badgePadding;
  border-radius: $badgeBorderRadius;
  background-color: $hoverButtonBg;
  /*color: #ffffff;*/
  /*text-shadow: 0 0 2px #909090;*/
  border: 1px solid #ffffff;
  position: absolute;
  z-index: 999;
  top: $badgeOffset * -1;
  right: $badgeOffset * -1;
  &.shadow {
    box-shadow: $badgeShadow;
    //border: 0;
  }
  &.mark {
    min-width: $badgeMarkSize;
    min-height: $badgeMarkSize;
    padding: 0;
    top: 1px;
    right: 1px;
  }
  &.align {
    &-left {
      left: $badgeOffsetLeft;
      right: auto;
    }
    &-center {
      left: 100%;
      right: auto;
      transform: translate(-50%, 0);
    }
    &-right {
      left: auto;
      right: $badgeOffset * -1;
    }
  }
}

@each $color, $values in join($brandColors, $stateColors) {
  $bgColor: #{nth($values, 1)};
  $hoverColor: #{nth($values, 2)};
  $textColor: #{nth($values, 3)};
  .ga-badge {
    &.#{$color} {
      background-color: $hoverColor;
      color: $textColor;
    }
  }
}

@each $color, $value in $colors {
  $hoverColor: darken($value, 10);
  $textColor: $white;
  .ga-badge {
    &.#{$color} {
      background-color: $value;
      color: $white;
    }
  }
}

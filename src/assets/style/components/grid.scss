$gridTableGutter: 1;
$cellVerticalPadding: 8px;
$cellHorizontalPadding: 12px;

$cellPadding: $cellVerticalPadding $cellHorizontalPadding;

$tableFontColor: #2c3e50;
$tableFontSize: 14px;
$tableBorderColor: #d7dae2;
$headerBackgroundColor: #e5e9f2;

$verticalMargin: 1em;
$horizontalMargin: 0;
$margin: $verticalMargin $horizontalMargin;
.ga {
  &-form .fields,
  &-grid {
    --gutter: $gridGutter;
    position: relative;
    display: flex;
    flex-wrap: wrap;
    align-items: stretch;
    margin: $gridGutter * -1px;
    margin-bottom: $gridGutter * 1px;
    &:last-child {
      margin-bottom: $gridGutter * -1px;
    }
    &.left-side .column:first-child {flex-grow: 1}
    &.right-side .column:last-child {flex-grow: 1}
    &.divide {
      @for $i from 1 through $gridWhole {
        &-#{$i} > .column{
          width: calc(100% / $i);
        }
      }
    }
    &.divide {
      > .column{width: calc(100% / 12);}
      &.one > .column{width: calc(100% / 1);}
      &.half > .column{width: calc(100% / 2);}
      &.third > .column{width: calc(100% / 3);}
      &.quarter > .column{width: calc(100% / 4);}
      &.fifth > .column{width: calc(100% / 5);}
      &.sixth > .column{width: calc(100% / 6);}
      &.eighth > .column{width: calc(100% / 8);}
      &.tenth > .column{width: calc(100% / 10);}
      &.eleventh > .column{width: calc(100% / 11);}
    }
    &.justify {
      &-left{justify-content: flex-start;}
      &-center{justify-content: center;}
      &-right{justify-content: flex-end;}
      &-between{justify-content: space-between;}
      &-around{justify-content: space-around;}
    }
    &.align {
      &-top{align-items: flex-start;}
      &-center{align-items: center;}
      &-bottom{align-items: flex-end;}
      &-stretch{align-items: stretch;}
    }
    .column {
      padding: $gridGutter * 1px;
      > .ga-grid,
      > .ga-form .fields {
        margin-bottom: $gridGutter * -1px;;
      }
    }
    .rows > .column,
    .column {
      width: $gridPercent * 1%;
      &.two {width: $gridPercent * 2%}
      &.three {width: $gridPercent * 3%}
      &.four {width: $gridPercent * 4%}
      &.five {width: $gridPercent * 5%}
      &.six {width: $gridPercent * 6%}
      &.seven {width: $gridPercent * 7%}
      &.eight {width: $gridPercent * 8%}
      &.nine {width: $gridPercent * 9%}
      &.ten {width: $gridPercent * 10%}
      &.col {
        @for $i from 1 through $gridWhole {
          &-#{$i} {width: $gridPercent * $i * 1%; }
        }
      }
      &.order {
        @for $i from 1 through $gridWhole {
          &-#{$i} {order: $i; }
        }
      }
      &.offset {
        @for $i from 1 through $gridWhole {
          &-#{$i} {margin-left: $gridPercent * $i * 1%; }
        }
      }
    }
  }
  &-grid > .rows {
    width: 100%;
    position: relative;
    display: flex;
    flex-wrap: wrap;
    align-items: stretch;
    margin: 0;
  }
}
.ga-grid {
  &.tabled, &.tabled .rows {
    --gutter: #{$gridTableGutter}px;
    background-color: $tableBorderColor;
    border: 1px solid $tableBorderColor;
    font-size: $tableFontSize;
    margin: $margin;
    column-gap: var(--gutter);
    &:first-child {
      margin-top: 0;
    }
    &:last-child {
      margin-bottom: 0;
    }
    &.labeled {
      margin-top: 0;
    }
    > .column {
      padding: $cellPadding;
      background-color: #fff;
      display: flex;
      align-items: center;
      justify-content: flex-start;
      &.label {
        background-color: $headerBackgroundColor;
        color: $tableFontColor;
      }
      &.align-left { justify-content: flex-start; }
      &.align-center { justify-content: center; }
      &.align-right { justify-content: flex-end; }
      &.align-top { align-items: flex-start; }
      &.align-middle { align-items: center; }
      &.align-bottom { align-items: flex-end; }
    }
    .ga-select-box, .ga-input {
      margin: 0;
    }
    .ga-input input {
      padding: $compactPadding;
    }
    .ga-select-box {
      select, i {
        padding: $compactPadding;
      }
    }
    .ga-button {
      padding: $compactPadding;
    }
  }
  &.tabled .rows {
    margin: 0;
    border: 0;
    border-bottom: 1px solid $tableBorderColor;
    &:last-child {
      border-bottom: 0;
    }
  }
}

@media all and (max-width: #{$bp-tablet - 1px}) {
  .ga {
    &-form .fields,
    &-grid {
      .column {
        &.col {
          @for $i from 1 through $gridWhole {
            &-xs-#{$i} {width: $gridPercent * $i * 1% !important; }
          }
        }
        &.offset {
          @for $i from 1 through $gridWhole {
            &-xs-#{$i} {margin-left: $gridPercent * $i * 1% !important; }
          }
        }
      }
      &.divide {
        @for $i from 1 through $gridWhole {
          &-xs-#{$i} > .column { width: calc(100% / $i) !important; }
        }
      }
    }
  }
}
@media all and (min-width: #{$bp-tablet}) and (max-width: #{$bp-laptop - 1px}) {
  .ga {
    &-form .fields,
    &-grid {
      .column {
        &.col {
          @for $i from 1 through $gridWhole {
            &-sm-#{$i} {width: $gridPercent * $i * 1% !important; }
          }
        }
        &.offset {
          @for $i from 1 through $gridWhole {
            &-sm-#{$i} {margin-left: $gridPercent * $i * 1% !important; }
          }
        }
      }
      &.divide {
        @for $i from 1 through $gridWhole {
          &-sm-#{$i} > .column { width: calc(100% / $i) !important; }
        }
      }
    }
  }

}
@media all and (min-width: #{$bp-laptop}) and (max-width: #{$bp-desktop - 1px}) {
  //@media all and (max-width: #{$bp-desktop - 1px}) {
  .ga {
    &-form .fields,
    &-grid {
      .column {
        &.col {
          @for $i from 1 through $gridWhole {
            &-md-#{$i} {width: $gridPercent * $i * 1% !important; }
          }
        }
        &.offset {
          @for $i from 1 through $gridWhole {
            &-md-#{$i} {margin-left: $gridPercent * $i * 1% !important; }
          }
        }
      }
      &.divide {
        @for $i from 1 through $gridWhole {
          &-md-#{$i} > .column { width: calc(100% / $i) !important; }
        }
      }
    }
  }
}